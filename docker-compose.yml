---
version: '3.7'
services:
  ## PostgreQL Docker Compose Config
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: storehousedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-order:/data/postgres
    expose:
      - "5731"
    ports:
      - "5731:5731"
    command: -p 5731
    restart: always

  postgres-inventory:
    container_name: postgres-inventory
    image: postgres
    environment:
      POSTGRES_DB: storehousedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-inventory:/data/postgres
    expose:
      - "5732"
    ports:
      - "5732:5732"
    command: -p 5732
    restart: always

  postgres-product:
    container_name: postgres-product
    image: postgres
    environment:
      POSTGRES_DB: storehousedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-inventory:/data/postgres
    expose:
      - "5733"
    ports:
      - "5733:5733"
    command: -p 5733
    restart: always

  ## Eureka Server
  discovery-server:
    image: artkhud20/discovery-server:1.0.0
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  api-gateway:
    image: artkhud20/api-gateway:1.0.0
    container_name: api-gateway
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server

  ## Product-Service Docker Compose Config
  product1-service:
    container_name: product1-service
    image: artkhud20/product1-service:1.0.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-product:5733/storehousedb
    depends_on:
      - postgres-product
      - discovery-server
      - api-gateway

  ## Order-Service Docker Compose Config
  order-service:
    container_name: order-service
    image: artkhud20/order-service:1.0.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5731/storehousedb
    depends_on:
      - postgres-order
      - discovery-server
      - api-gateway

  ## Inventory-Service Docker Compose Config
  inventory-service:
    container_name: inventory-service
    image: artkhud20/inventory-service:1.0.0
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-inventory:5732/storehousedb
    depends_on:
      - postgres-inventory
      - discovery-server
      - api-gateway
